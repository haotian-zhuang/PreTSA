[{"path":"https://haotian-zhuang.github.io/PreTSA/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 PreTSA authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://haotian-zhuang.github.io/PreTSA/articles/PreTSA_spatial.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Model spatial gene expression patterns","text":"demonstrate use PreTSA fit gene expression along spatial locations identify spatially variable genes (SVGs). Visium dataset human heart tissue downloaded 10x website. Mitochondrial genes genes expressed fewer 50 spots filtered . analyzed final set 11,953 genes 4,247 spots. SCTransform default settings used normalize raw count data.","code":""},{"path":"https://haotian-zhuang.github.io/PreTSA/articles/PreTSA_spatial.html","id":"load-packages-and-datasets","dir":"Articles","previous_headings":"","what":"Load packages and datasets","title":"Model spatial gene expression patterns","text":"","code":"library(PreTSA) load(system.file(\"extdata\", \"heart\", \"heart_cleaned.Rdata\", package = \"PreTSA\")) str(expr) #> Loading required package: Matrix #> Formal class 'dgCMatrix' [package \"Matrix\"] with 6 slots #>   ..@ i       : int [1:8104687] 9 10 16 22 23 45 50 59 61 68 ... #>   ..@ p       : int [1:4248] 0 1970 4194 6523 8020 9234 11174 12758 15297 17812 ... #>   ..@ Dim     : int [1:2] 11953 4247 #>   ..@ Dimnames:List of 2 #>   .. ..$ : chr [1:11953] \"LINC01409\" \"LINC01128\" \"NOC2L\" \"PERM1\" ... #>   .. ..$ : chr [1:4247] \"AAACAAGTATCTCCCA-1\" \"AAACACCAATAACTGC-1\" \"AAACAGAGCGACTCCT-1\" \"AAACAGCTTTCAGAAG-1\" ... #>   ..@ x       : num [1:8104687] 0.693 0.693 0.693 1.792 0.693 ... #>   ..@ factors : list() str(coord) #>  int [1:4247, 1:2] 50 59 14 43 47 62 61 3 45 54 ... #>  - attr(*, \"dimnames\")=List of 2 #>   ..$ : chr [1:4247] \"AAACAAGTATCTCCCA-1\" \"AAACACCAATAACTGC-1\" \"AAACAGAGCGACTCCT-1\" \"AAACAGCTTTCAGAAG-1\" ... #>   ..$ : chr [1:2] \"row\" \"col\""},{"path":"https://haotian-zhuang.github.io/PreTSA/articles/PreTSA_spatial.html","id":"fit-the-gene-expression-along-spatial-locations","dir":"Articles","previous_headings":"","what":"Fit the gene expression along spatial locations","title":"Model spatial gene expression patterns","text":"argument “knot” indicates whether select optimal number knots automatically (FALSE default). argument “maxknotallowed” user-defined maximum number knots (5 default).","code":"fitRes <- spatialFit(expr = expr, coord = coord, knot = F) str(fitRes) #>  num [1:11953, 1:4247] 0.0242 0.1786 0.1103 0.2397 0.2105 ... #>  - attr(*, \"dimnames\")=List of 2 #>   ..$ : chr [1:11953] \"LINC01409\" \"LINC01128\" \"NOC2L\" \"PERM1\" ... #>   ..$ : chr [1:4247] \"AAACAAGTATCTCCCA-1\" \"AAACACCAATAACTGC-1\" \"AAACAGAGCGACTCCT-1\" \"AAACAGCTTTCAGAAG-1\" ... spatialFit(expr = expr, coord = coord, knot = T, maxknotallowed = 5)"},{"path":"https://haotian-zhuang.github.io/PreTSA/articles/PreTSA_spatial.html","id":"identify-spatially-variable-genes-svgs","dir":"Articles","previous_headings":"","what":"Identify spatially variable genes (SVGs)","title":"Model spatial gene expression patterns","text":"returns data frame p-value, FDR, number knots selected gene.","code":"testRes <- spatialTest(expr = expr, coord = coord, knot = F) head(testRes) #>                    fdr         pval knotnum #> LINC01409 3.707785e-01 2.210843e-01       0 #> LINC01128 1.314814e-01 4.623516e-02       0 #> NOC2L     4.960952e-01 3.468474e-01       0 #> PERM1     2.940015e-01 1.544033e-01       0 #> HES4      6.518492e-02 1.686202e-02       0 #> ISG15     1.017506e-29 3.405022e-32       0"},{"path":"https://haotian-zhuang.github.io/PreTSA/articles/PreTSA_spatial.html","id":"visualize-the-fitted-expression","dir":"Articles","previous_headings":"","what":"Visualize the fitted expression","title":"Model spatial gene expression patterns","text":"fitted PreTSA expression can seamlessly incorporated Seurat pipeline. example, fitted PreTSA expression MYH7 shows spots right side significantly lower expression levels left side.","code":"library(ggplot2) library(Seurat) #> Attaching SeuratObject heart <- Load10X_Spatial(data.dir = system.file(\"extdata\", \"heart\", package = \"PreTSA\"), filename = \"V1_Human_Heart_filtered_feature_bc_matrix.h5\") DefaultAssay(heart) #> [1] \"Spatial\" heart[[\"Fitted\"]] <- CreateAssayObject(data = fitRes) DefaultAssay(heart) <- \"Fitted\" genename <- \"MYH7\" SpatialFeaturePlot(heart, features = genename) +   theme(legend.position = \"right\", legend.title = element_text(face = \"italic\")) sessionInfo() #> R version 4.2.1 (2022-06-23) #> Platform: x86_64-apple-darwin17.0 (64-bit) #> Running under: macOS Big Sur ... 10.16 #>  #> Matrix products: default #> BLAS:   /Library/Frameworks/R.framework/Versions/4.2/Resources/lib/libRblas.0.dylib #> LAPACK: /Library/Frameworks/R.framework/Versions/4.2/Resources/lib/libRlapack.dylib #>  #> locale: #> [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8 #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] SeuratObject_4.1.3 Seurat_4.3.0       ggplot2_3.4.2      Matrix_1.5-1       #> [5] PreTSA_1.0         #>  #> loaded via a namespace (and not attached): #>   [1] Rtsne_0.16             colorspace_2.0-3       deldir_1.0-6           #>   [4] ellipsis_0.3.2         ggridges_0.5.4         rprojroot_2.0.3        #>   [7] fs_1.5.2               spatstat.data_3.0-0    rstudioapi_0.14        #>  [10] farver_2.1.1           leiden_0.4.3           listenv_0.9.0          #>  [13] bit64_4.0.5            ggrepel_0.9.2          fansi_1.0.3            #>  [16] codetools_0.2-18       splines_4.2.1          cachem_1.0.6           #>  [19] knitr_1.41             polyclip_1.10-4        jsonlite_1.8.4         #>  [22] ica_1.0-3              cluster_2.1.3          png_0.1-8              #>  [25] uwot_0.1.14            spatstat.sparse_3.0-0  shiny_1.7.4            #>  [28] sctransform_0.3.5      compiler_4.2.1         httr_1.4.5             #>  [31] fastmap_1.1.0          lazyeval_0.2.2         cli_3.6.1              #>  [34] later_1.3.0            htmltools_0.5.4        tools_4.2.1            #>  [37] igraph_1.3.5           gtable_0.3.1           glue_1.6.2             #>  [40] RANN_2.6.1             reshape2_1.4.4         dplyr_1.1.1            #>  [43] Rcpp_1.0.10            scattermore_0.8        jquerylib_0.1.4        #>  [46] pkgdown_2.0.7          vctrs_0.6.1            nlme_3.1-157           #>  [49] spatstat.explore_3.0-5 progressr_0.12.0       lmtest_0.9-40          #>  [52] spatstat.random_3.0-1  xfun_0.39              stringr_1.5.0          #>  [55] globals_0.16.2         mime_0.12              miniUI_0.1.1.1         #>  [58] lifecycle_1.0.3        irlba_2.3.5.1          goftest_1.2-3          #>  [61] future_1.30.0          MASS_7.3-57            zoo_1.8-11             #>  [64] scales_1.2.1           spatstat.utils_3.0-1   ragg_1.2.5             #>  [67] promises_1.2.0.1       parallel_4.2.1         RColorBrewer_1.1-3     #>  [70] yaml_2.3.6             memoise_2.0.1          reticulate_1.28        #>  [73] pbapply_1.6-0          gridExtra_2.3          sass_0.4.4             #>  [76] stringi_1.7.8          highr_0.10             desc_1.4.2             #>  [79] rlang_1.1.0            pkgconfig_2.0.3        systemfonts_1.0.4      #>  [82] matrixStats_0.63.0     evaluate_0.19          lattice_0.20-45        #>  [85] tensor_1.5             ROCR_1.0-11            purrr_1.0.1            #>  [88] labeling_0.4.2         patchwork_1.1.2        htmlwidgets_1.6.1      #>  [91] bit_4.0.5              cowplot_1.1.1          tidyselect_1.2.0       #>  [94] parallelly_1.33.0      RcppAnnoy_0.0.20       plyr_1.8.8             #>  [97] magrittr_2.0.3         R6_2.5.1               generics_0.1.3         #> [100] DBI_1.1.3              pillar_1.8.1           withr_2.5.0            #> [103] fitdistrplus_1.1-8     abind_1.4-5            survival_3.3-1         #> [106] sp_1.5-1               tibble_3.2.1           future.apply_1.10.0    #> [109] hdf5r_1.3.7            KernSmooth_2.23-20     utf8_1.2.2             #> [112] spatstat.geom_3.0-3    plotly_4.10.1          rmarkdown_2.19         #> [115] grid_4.2.1             data.table_1.14.6      digest_0.6.31          #> [118] xtable_1.8-4           tidyr_1.3.0            httpuv_1.6.7           #> [121] textshaping_0.3.6      munsell_0.5.0          viridisLite_0.4.1      #> [124] bslib_0.4.2"},{"path":"https://haotian-zhuang.github.io/PreTSA/articles/PreTSA_temporal.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Model temporal gene expression patterns","text":"demonstrate use PreTSA fit gene expression along pseudotime values identify temporally variable genes (TVGs). 3K peripheral blood mononuclear cells (PBMC3K) dataset downloaded 10x website. processed PBMC3K dataset downloaded using R package SeuratData. TSCAN used construct pseudotime trajectory naive CD4 T cells memory CD4 T cells top 10 principal components (PCs) cell clusters obtained dataset. Genes expressed fewer 5 cells within trajectory filtered . analyzed final set 10,509 genes 1,180 cells.","code":""},{"path":"https://haotian-zhuang.github.io/PreTSA/articles/PreTSA_temporal.html","id":"load-packages-and-datasets","dir":"Articles","previous_headings":"","what":"Load packages and datasets","title":"Model temporal gene expression patterns","text":"","code":"library(PreTSA) load(system.file(\"extdata\", \"pbmc3k\", \"pbmc3k_cleaned.Rdata\", package = \"PreTSA\")) str(expr) #> Loading required package: Matrix #> Formal class 'dgCMatrix' [package \"Matrix\"] with 6 slots #>   ..@ i       : int [1:953387] 22 52 157 168 190 252 350 430 486 554 ... #>   ..@ p       : int [1:1181] 0 238 508 958 1290 1691 2211 2596 2842 3257 ... #>   ..@ Dim     : int [1:2] 10509 1180 #>   ..@ Dimnames:List of 2 #>   .. ..$ : chr [1:10509] \"LINC00115\" \"NOC2L\" \"HES4\" \"ISG15\" ... #>   .. ..$ : chr [1:1180] \"CTAATAGAGCTATG\" \"TAGTCTTGGCTGTA\" \"ACTTGTACCTGTCC\" \"CACCCATGTTCTGT\" ... #>   ..@ x       : num [1:953387] 2.87 2.87 5.46 2.87 3.54 ... #>   ..@ factors : list() str(pseudotime) #>  Named int [1:1180] 1 2 3 4 5 6 7 8 9 10 ... #>  - attr(*, \"names\")= chr [1:1180] \"CTAATAGAGCTATG\" \"TAGTCTTGGCTGTA\" \"ACTTGTACCTGTCC\" \"CACCCATGTTCTGT\" ..."},{"path":"https://haotian-zhuang.github.io/PreTSA/articles/PreTSA_temporal.html","id":"fit-the-gene-expression-along-pseudotime-values","dir":"Articles","previous_headings":"","what":"Fit the gene expression along pseudotime values","title":"Model temporal gene expression patterns","text":"argument “knot” indicates whether select optimal number knots automatically (FALSE default). argument “maxknotallowed” user-defined maximum number knots (10 default).","code":"fitRes <- temporalFit(expr = expr, pseudotime = pseudotime, knot = F) str(fitRes) #>  num [1:10509, 1:1180] 0.00238 0.16975 0.00847 0.34266 -0.00666 ... #>  - attr(*, \"dimnames\")=List of 2 #>   ..$ : chr [1:10509] \"LINC00115\" \"NOC2L\" \"HES4\" \"ISG15\" ... #>   ..$ : chr [1:1180] \"CTAATAGAGCTATG\" \"TAGTCTTGGCTGTA\" \"ACTTGTACCTGTCC\" \"CACCCATGTTCTGT\" ... temporalFit(expr = expr, pseudotime = pseudotime, knot = T, maxknotallowed = 10)"},{"path":"https://haotian-zhuang.github.io/PreTSA/articles/PreTSA_temporal.html","id":"identify-temporally-variable-genes-tvgs","dir":"Articles","previous_headings":"","what":"Identify temporally variable genes (TVGs)","title":"Model temporal gene expression patterns","text":"account pseudotime uncertainty, apply similar strategy used PseudotimeDE. argument “pseudotime_permute” list permuted pseudotime values subsampled cells. element list format argument “pseudotime”. reduce computational time, users can ignore pseudotime uncertainty, default setting. returns data frame p-value, FDR, number knots selected gene.","code":"pseudotime_permute <- readRDS(system.file(\"extdata\", \"pbmc3k\", \"pbmc3k_pseudotime_permute.rds\", package = \"PreTSA\")) length(pseudotime_permute) #> [1] 100 str(pseudotime_permute[[1]]) #>  Named int [1:944] 1 2 3 4 5 6 7 8 9 10 ... #>  - attr(*, \"names\")= chr [1:944] \"AAATTCGAGGAGTG\" \"GAGATGCTGAATGA\" \"TATCTTCTAAACAG\" \"GCAAGACTACTGGT\" ... temporalTest(expr = expr, pseudotime = pseudotime, pseudotime_permute = pseudotime_permute, knot = F) testRes <- temporalTest(expr = expr, pseudotime = pseudotime, pseudotime_permute = NULL, knot = F) head(testRes) #>                    fdr         pval knotnum #> LINC00115 9.784399e-01 9.589589e-01       0 #> NOC2L     8.891055e-01 7.825888e-01       0 #> HES4      9.999038e-01 9.998087e-01       0 #> ISG15     2.309152e-15 1.098654e-17       0 #> C1orf159  2.306248e-01 5.202783e-02       0 #> TNFRSF18  1.130205e-06 2.097155e-08       0"},{"path":"https://haotian-zhuang.github.io/PreTSA/articles/PreTSA_temporal.html","id":"visualize-the-fitted-expression","dir":"Articles","previous_headings":"","what":"Visualize the fitted expression","title":"Model temporal gene expression patterns","text":"example, IL32 known gene associated T cell activation process. fitted PreTSA curve shows increasing trend.","code":"library(ggplot2) genename <- \"IL32\" df.gene = data.frame(ptime = pseudotime, ori = expr[genename, ], pretsa = fitRes[genename, ])  ggplot(data = df.gene) + geom_point(aes(x = ptime, y = ori), color = \"orange\") +   geom_line(aes(x = ptime, y = pretsa), linewidth = 2, color = \"royalblue\") +   labs(x = \"Pseudotime\", y = \"Expression\", title = genename) + theme_classic() +   theme(plot.title = element_text(hjust = 0.5, face = \"italic\")) sessionInfo() #> R version 4.2.1 (2022-06-23) #> Platform: x86_64-apple-darwin17.0 (64-bit) #> Running under: macOS Big Sur ... 10.16 #>  #> Matrix products: default #> BLAS:   /Library/Frameworks/R.framework/Versions/4.2/Resources/lib/libRblas.0.dylib #> LAPACK: /Library/Frameworks/R.framework/Versions/4.2/Resources/lib/libRlapack.dylib #>  #> locale: #> [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8 #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] ggplot2_3.4.2 Matrix_1.5-1  PreTSA_1.0    #>  #> loaded via a namespace (and not attached): #>  [1] highr_0.10         pillar_1.8.1       bslib_0.4.2        compiler_4.2.1     #>  [5] jquerylib_0.1.4    tools_4.2.1        digest_0.6.31      tibble_3.2.1       #>  [9] jsonlite_1.8.4     evaluate_0.19      memoise_2.0.1      lifecycle_1.0.3    #> [13] gtable_0.3.1       lattice_0.20-45    pkgconfig_2.0.3    rlang_1.1.0        #> [17] cli_3.6.1          rstudioapi_0.14    yaml_2.3.6         pkgdown_2.0.7      #> [21] xfun_0.39          fastmap_1.1.0      withr_2.5.0        dplyr_1.1.1        #> [25] stringr_1.5.0      knitr_1.41         generics_0.1.3     desc_1.4.2         #> [29] fs_1.5.2           vctrs_0.6.1        sass_0.4.4         systemfonts_1.0.4  #> [33] tidyselect_1.2.0   rprojroot_2.0.3    grid_4.2.1         glue_1.6.2         #> [37] R6_2.5.1           textshaping_0.3.6  fansi_1.0.3        rmarkdown_2.19     #> [41] farver_2.1.1       purrr_1.0.1        magrittr_2.0.3     scales_1.2.1       #> [45] htmltools_0.5.4    matrixStats_0.63.0 splines_4.2.1      colorspace_2.0-3   #> [49] labeling_0.4.2     ragg_1.2.5         utf8_1.2.2         stringi_1.7.8      #> [53] munsell_0.5.0      cachem_1.0.6"},{"path":"https://haotian-zhuang.github.io/PreTSA/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Haotian Zhuang. Author, maintainer. Zhicheng Ji. Author.","code":""},{"path":"https://haotian-zhuang.github.io/PreTSA/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Zhuang H, Ji Z (2024). PreTSA: Pattern recognition Temporal Spatial Analyses. R package version 1.0, https://github.com/haotian-zhuang/PreTSA.","code":"@Manual{,   title = {PreTSA: Pattern recognition in Temporal and Spatial Analyses},   author = {Haotian Zhuang and Zhicheng Ji},   year = {2024},   note = {R package version 1.0},   url = {https://github.com/haotian-zhuang/PreTSA}, }"},{"path":"https://haotian-zhuang.github.io/PreTSA/index.html","id":"pretsa","dir":"","previous_headings":"","what":"Pattern recognition in Temporal and Spatial Analyses","title":"Pattern recognition in Temporal and Spatial Analyses","text":"R package PreTSA (Pattern recognition Temporal Spatial Analyses) performs computationally efficient modeling temporal spatial gene expression patterns large-scale single-cell spatial transcriptomics data, providing unique solution understanding dynamic biological processes.","code":""},{"path":"https://haotian-zhuang.github.io/PreTSA/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Pattern recognition in Temporal and Spatial Analyses","text":"install latest version R package GitHub, please run following commands R:","code":"if (!require(\"devtools\")) install.packages(\"devtools\") devtools::install_github(\"haotian-zhuang/PreTSA\")"},{"path":"https://haotian-zhuang.github.io/PreTSA/index.html","id":"vignettes","dir":"","previous_headings":"","what":"Vignettes","title":"Pattern recognition in Temporal and Spatial Analyses","text":"Detailed vignettes available website. Vignette: Model temporal gene expression patterns Vignette: Model spatial gene expression patterns","code":""},{"path":"https://haotian-zhuang.github.io/PreTSA/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Pattern recognition in Temporal and Spatial Analyses","text":"Please cite following paper: Zhuang Ji (2023+)","code":""},{"path":"https://haotian-zhuang.github.io/PreTSA/index.html","id":"contact","dir":"","previous_headings":"","what":"Contact","title":"Pattern recognition in Temporal and Spatial Analyses","text":"Authors: Haotian Zhuang, Zhicheng Ji Report bugs provide suggestions sending email : Maintainer: Haotian Zhuang (haotian.zhuang@duke.edu) open new issue GitHub page","code":""},{"path":"https://haotian-zhuang.github.io/PreTSA/reference/spatialFit.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit the gene expression along spatial locations — spatialFit","title":"Fit the gene expression along spatial locations — spatialFit","text":"Fit gene expression along spatial locations","code":""},{"path":"https://haotian-zhuang.github.io/PreTSA/reference/spatialFit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit the gene expression along spatial locations — spatialFit","text":"","code":"spatialFit(expr, coord, knot = F, maxknotallowed = 5)"},{"path":"https://haotian-zhuang.github.io/PreTSA/reference/spatialFit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit the gene expression along spatial locations — spatialFit","text":"expr normalized gene expression matrix. Rows represent genes columns represent spots/cells coord matrix spatial locations. Rows represent spots/cells. column named \"row\" (\"col\") represents row (column) coordinates knot Whether select optimal number knots automatically maxknotallowed user-defined maximum number knots (5 default)","code":""},{"path":"https://haotian-zhuang.github.io/PreTSA/reference/spatialFit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit the gene expression along spatial locations — spatialFit","text":"fitted expression matrix. Rows represent genes columns represent spots/cells","code":""},{"path":"https://haotian-zhuang.github.io/PreTSA/reference/spatialTest.html","id":null,"dir":"Reference","previous_headings":"","what":"Test if the gene expression is associated with spatial locations — spatialTest","title":"Test if the gene expression is associated with spatial locations — spatialTest","text":"Test gene expression associated spatial locations","code":""},{"path":"https://haotian-zhuang.github.io/PreTSA/reference/spatialTest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test if the gene expression is associated with spatial locations — spatialTest","text":"","code":"spatialTest(expr, coord, knot = F, maxknotallowed = 5)"},{"path":"https://haotian-zhuang.github.io/PreTSA/reference/spatialTest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test if the gene expression is associated with spatial locations — spatialTest","text":"expr normalized gene expression matrix. Rows represent genes columns represent spots/cells coord matrix spatial locations. Rows represent spots/cells. column named \"row\" (\"col\") represents row (column) coordinates knot Whether select optimal number knots automatically maxknotallowed user-defined maximum number knots (5 default)","code":""},{"path":"https://haotian-zhuang.github.io/PreTSA/reference/spatialTest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test if the gene expression is associated with spatial locations — spatialTest","text":"data frame p-value FDR gene (row)","code":""},{"path":"https://haotian-zhuang.github.io/PreTSA/reference/temporalFit.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit the gene expression along pseudotime values — temporalFit","title":"Fit the gene expression along pseudotime values — temporalFit","text":"Fit gene expression along pseudotime values","code":""},{"path":"https://haotian-zhuang.github.io/PreTSA/reference/temporalFit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit the gene expression along pseudotime values — temporalFit","text":"","code":"temporalFit(expr, pseudotime, knot = F, maxknotallowed = 10)"},{"path":"https://haotian-zhuang.github.io/PreTSA/reference/temporalFit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit the gene expression along pseudotime values — temporalFit","text":"expr normalized gene expression matrix. Rows represent genes columns represent cells pseudotime vector user-provided pseudotime values knot Whether select optimal number knots automatically maxknotallowed user-defined maximum number knots (10 default)","code":""},{"path":"https://haotian-zhuang.github.io/PreTSA/reference/temporalFit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit the gene expression along pseudotime values — temporalFit","text":"fitted expression matrix. Rows represent genes columns represent cells","code":""},{"path":"https://haotian-zhuang.github.io/PreTSA/reference/temporalTest.html","id":null,"dir":"Reference","previous_headings":"","what":"Test if the gene expression is associated with pseudotime values — temporalTest","title":"Test if the gene expression is associated with pseudotime values — temporalTest","text":"Test gene expression associated pseudotime values","code":""},{"path":"https://haotian-zhuang.github.io/PreTSA/reference/temporalTest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test if the gene expression is associated with pseudotime values — temporalTest","text":"","code":"temporalTest(   expr,   pseudotime,   pseudotime_permute = NULL,   knot = F,   maxknotallowed = 10 )"},{"path":"https://haotian-zhuang.github.io/PreTSA/reference/temporalTest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test if the gene expression is associated with pseudotime values — temporalTest","text":"expr normalized gene expression matrix. Rows represent genes columns represent cells pseudotime vector user-provided pseudotime values pseudotime_permute list permuted pseudotime values subsampled cells. element list format argument pseudotime knot Whether select optimal number knots automatically maxknotallowed user-defined maximum number knots (10 default)","code":""},{"path":"https://haotian-zhuang.github.io/PreTSA/reference/temporalTest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test if the gene expression is associated with pseudotime values — temporalTest","text":"data frame p-value FDR gene (row)","code":""}]
